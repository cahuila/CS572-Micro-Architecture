{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww15080\viewh8420\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Author:		Joaquin Aguirre\
Class:			CS572, Fall 2013\
Assignment:		Lab #1\
Filename:		README\
\
File manifest:		accumSim.c - contains the source code for the accumulator simulator program.\
\
			accumCode.s - contains the assembly source code for the simulator.\
\
			accumCodeHex.txt - contains the assembly source code with the Hex conversion of the instructions.\
			\
			stackSim.c - contains the source code for the stack simulator program.\
\
			stackCode.s - contains the assembly source code for the simulator.\
\
			stackCodeHex.txt - contains the assembly source code with the Hex conversion of the instructions.\
			\
			Lab2 Report.docx - contains the opcode and converted assembly files. Also contains the file program sizes.\
	\
			quadratic_eval.s - contains the revised version of the quadratic equations. With comments and corrections.\
\
Compile\
Instructions:		\
\
			Stack Simulator:\
				To compile the stack program type: g++ stack.c -o stack\
			\
			Accumulator Simulator:\
				To compile the accumulator program type: g++ accumulator.c -o accumulator\
			\
Operating\
Instructions:\
\
			Stack Simulator:\
				To run the stack program with the default program of "stack.s" type:  'stack'\
\
			Accumulator Simulator:\
				To run the accumulator program with the default program of "accumulator.s" type: 'accumulator'  \
\
			To run an alternative program: type in the name of the program followed by the name of the file.\
				For example: stack otherStackAssembly.s\
\
Design\
Decisions:		I decided to create a 64 bit machine. Since it more efficient for a machine to split up 64 bits instructions, instead of 40 bit 			instructions. This allows for 32 bits for the memory address and also 32 bits for the opcode. \
			\
Lessons\
Learned:		Everything seems to be working correctly. The most important lesson was the fact that there are many possibilities for the 			opcode and when you are to actually execute the instructions in a program, there are many factors that need to be 			resolved before it can be deems acceptable.\
			\
				}